
(print obj) ?
(str obj) ?

(add y x) ? 
(sub y x) ? 
(mul y x) ? 
(div y x) ? 
(mod y x) ? 
(not x) ?
(above y x) ?
(equal y x) ?

(if c (t) (f)) ?
(while (c) (t)) ?

(cat x y) ?
(random low high) ?

(object) ?
(set obj prop val) ?
(get obj prop) ?

(InitWindow x y name) ?
(CloseWindow) ?
(WindowShouldClose) ?
(GetFrameTime) ?

(KEY_UP) ?
(KEY_DOWN) ?
(KEY_RIGHT) ?
(KEY_LEFT) ?
(KEY_ENTER) ?
(KEY_BACKSPACE) ?
(IsKeyPressed key) ?
(IsKeyDown key) ?

(BeginDrawing) ?
(EndDrawing) ?

(DrawLine x1 y1 x2 y2 color) ?
(DrawRectangle x y sizex sizey color) ?
(DrawText text x y size color) ?
(ClearBackground color) ?

(RAYWHITE) ?
(RED) ?
(ORANGE) ?
(YELLOW) ?
(GREEN) ?
(BLUE) ?
(PURPLE) ?
(WHITE) ?
(BLACK) ?

(math-sin x) ?
(math-cos x) ?
(math-PI) ?
(math-floor x) ?

(do y x) x

(let [x] x (in x))
in x

(and x (y)) if x y 0
(or x (y))  if x x y 

(range-upto-from [n] low high (then n))
if  above low high
    do  then low
        range-upto-from nn add 1 low high then nn
    0

(range-upto [n] high (then n))
range-upto-from n 0 high then n 

(new-store)
let store object
do  set store "n" 1000
    store

(draw x y s)
if  above s 1
    0
let nx add x mul s math-sin add s x
let ny add y mul s math-cos add s y
do  DrawLine x y nx ny BLACK
do  draw nx ny div 200 mul 100 s 
do  draw nx y div 200 mul 100 s 
do  draw x ny div 200 mul 100 s 
do  draw x x div 200 mul 100 s 
    0
    
(frame store)
do  set store "n" add div 1 0 get store "n"
draw 1000 1000 get store "n"

(main)
do  InitWindow 2000 2000 "Chaos"
do  let store new-store
do  while not WindowShouldClose
    do  BeginDrawing
    do  ClearBackground WHITE
    do  frame store
        EndDrawing
    CloseWindow
    0